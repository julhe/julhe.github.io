<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>julhe.github.io</title>
    <link>https://julhe.github.io/</link>
    <description>Recent content on julhe.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 May 2019 20:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://julhe.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dead Simple Filtering for SDFs Masks</title>
      <link>https://julhe.github.io/posts/dead-simple-filtering-for-sdfs-masks/</link>
      <pubDate>Fri, 31 May 2019 20:00:00 +0100</pubDate>
      
      <guid>https://julhe.github.io/posts/dead-simple-filtering-for-sdfs-masks/</guid>
      <description>Intro Signed Distance Fields are amazing. They allow you to render fonts at a. I recenlty needed them for a project and I coudn&amp;rsquo;t find a stable filtering methode for them as a texture. After some Trial &amp;amp; Error, I figured out a pretty simple and stable methode I won&amp;rsquo;t withheld any futher.
Code #define inverseLerp(a,b,x) ((x-a)/(b-a))  ... half rawSdf = _Mask.Sample(sampler_Mask, i.uv).r ; half texelCoverage = fwidth(i.uv) * _Mask_TexelSize.</description>
    </item>
    
    <item>
      <title>Baked Surface Reflections</title>
      <link>https://julhe.github.io/posts/baked-spatial-reflections/</link>
      <pubDate>Wed, 21 Nov 2018 20:24:00 +0100</pubDate>
      
      <guid>https://julhe.github.io/posts/baked-spatial-reflections/</guid>
      <description>For Lucid Trips I&amp;rsquo;ve needed a fast technique to provide reflection to a water surface. Not only was the surface large, it was also a sphere. A single reflection probe didn&amp;rsquo;t looked so well. But what would happend if we use thousands instead of one? I&amp;rsquo;ve made a prototype in Unity:
 Not bad, huh?
Reflections by the surface While this looks good enough, with this amount of probes it&amp;rsquo;s a engine meltdown.</description>
    </item>
    
    <item>
      <title>Fixing screenspace effects for VR</title>
      <link>https://julhe.github.io/posts/fixing-screenspace-effects-for-vr/</link>
      <pubDate>Thu, 21 Dec 2017 20:24:00 +0100</pubDate>
      
      <guid>https://julhe.github.io/posts/fixing-screenspace-effects-for-vr/</guid>
      <description>In virtual reality, vignetting is a handy tool to fight motion sickness, games like Eagle Flight do this and also our beloved Lucid Trips!
Lucid Trips with vignettingBut the &amp;ldquo;stock&amp;rdquo; vignette that we copy from traditional games is actually not made for in-your-face-screens. This might not be obvious in the first place, but once you see the raw vignette, it makes your eyes literally hurt.
The reason is simple: the screen center, which is also center of the vignett, is not the eye center.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://julhe.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://julhe.github.io/about/</guid>
      <description>I&amp;rsquo;m a twenty-something programmer from germany.
CV: Checkout my LinkedIn page!</description>
    </item>
    
    <item>
      <title>Project stuff</title>
      <link>https://julhe.github.io/showcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://julhe.github.io/showcase/</guid>
      <description>For the professional work, look at my LinkedIn page.
Lucid Trips (Steam) - Lucid Trips Team (2015+)
A abstract VR-Game with unique locomotion and artworks to explore. I&amp;rsquo;ve done art-tools, lot&amp;rsquo;s of custom shaders, effects such as the player trails or permanent footsteps and parts of the sound design.
with Nico Uthe, Sara Lisa Vogl and Peter van der Straat
Tower Tag - VR-Nerds GmbH (2018)
While working at VR-Nerds, I&amp;rsquo;ve done shader + art + framework that would display damage on destructable walls.</description>
    </item>
    
  </channel>
</rss>